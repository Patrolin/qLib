enum TextColor {
    RED   = "\033[0;31m"
    GREEN = "\033[0;32m"
    RESET = "\033[0m"
}

func[] tests = {}

// decorator??
func test(callback: func)
    tests.append(callback)
    return callback

void run_tests():
    passed = 0
    failed = 0
    for test in tests:
        name = tprint("#% %", passed + failed + 1, test.__name__)
        test()
        try: // catch assert??
            test()
            print("%% passed%", TextColor.GREEN, name, TextColor.RESET)
            passed += 1
        except Exception:
            print("%% failed:", TextColor.RED, name)
            traceback.print_exc() // print exception??
            print(TextColor.RESET)
            failed += 1

    print("    %tests: % passed % failed%", TextColor.GREEN if failed == 0 else TextColor.RED, passed, failed, TextColor.RESET)
    exit(failed)
